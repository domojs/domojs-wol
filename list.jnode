var tableService;

var ListManager=function(tableName)
{
	this.colors={};

	var manager=this;
	
	var map=function(item){
		return { color:manager.colors[item.Category] || item.Category, subBlocks:[{icon:"plus", cmd:{url:'/api/'+tableName+'/increase/'+item.RowKey, dataType:'json', refresh:'parent'}}, {icon:'minus', cmd:{url:'/api/'+tableName+'/decrease/'+item.RowKey, dataType:'json', refresh:'parent'}}, {name:decodeURIComponent(item.RowKey)}, {name:item.Quantity}] };
	};

	this.list=function(req,res, next)
	{
		console.log('querying data');
		var query = $('azure').TableQuery
		.select()
		.from(tableName);
		
		tableService.queryEntities(query, function(error, entities, continuation, response){
			if(!error){
				//entities contains an array of entities
				if(!$.isArray(entities))
					entities=[entities];
				entities=$.map(entities, map);
				
				entities.unshift({
					text:"Ajouter", 
					icon:'add',
					cmd:{
						"name":{displayText:"Nom du produit", isRequired:true}, 
						"quantity":{displayText:"Quantité"}, 
						"category":{displayText:"Catégorie"}, 
						"ajax":{"type":'PUT', "url":'/api/'+tableName}
						}
				
				});
				
				res.setHeader('ETag', response.body.updated);

				res.send(entities);	
			}
			else
				next(error);
			
		});
	}

	this.add=function(req,res,next)
	{
		req.setEncoding('utf8');
		req.on('data', function(form){
			console.log(form);
			var data=$('querystring').parse(form);
			tableService.insertEntity(tableName, { PartitionKey:'dna', RowKey:data.name, Quantity:Number(data.quantity) || 0,  Category:data.category },
			function(error){
				if(error)
					return next(error);
				res.send(200);
			});
		});
	}

	this.increase=function(req,res,next)
	{
		req.params.name=encodeURIComponent(req.params.name);
		tableService.queryEntity(tableName, 'dna', req.params.name, function(error, entity){
			if(error)
				return next({message:"Error while querying data : dna|"+req.params.name, error:error});
			tableService.mergeEntity(tableName, $.extend(entity, {RowKey:encodeURIComponent(entity.RowKey), Quantity:Number(entity.Quantity)+1}), function(error){
				if(error)
					return next({message:"Error while merging entity", error:error});
				res.send(map(entity));
			});
		});
	}

	this.decrease=function(req,res,next)
	{
		req.params.name=encodeURIComponent(req.params.name);
		tableService.queryEntity(tableName, 'dna', req.params.name, function(error, entity){
			if(error)
				return next({message:"Error while querying data : dna|"+req.params.name, error:error});
			tableService.mergeEntity(tableName, $.extend(entity, {RowKey:encodeURIComponent(entity.RowKey), Quantity:Number(entity.Quantity)-1}), function(error){
				if(error)
					return next({message:"Error while merging entity", error:error});
				res.send(map(entity));
			});
		});}

}

exports.init=function(config)
{
	for(var table in config.tables)
	{
		var tableName=config.tables[table];
		var listManager=new ListManager(tableName); 
		$.get('/api/'+tableName, listManager.list);
		$.put('/api/'+tableName, listManager.add);
		$.get('/api/'+tableName+'/increase/:name', listManager.increase);
		$.get('/api/'+tableName+'/decrease/:name', listManager.decrease);
		tableService=$('azure').createTableService(config.accountName, config.accountKey);
		tableService.createTableIfNotExists(tableName, function(){});
		listManager.colors=config.colors;
	}
}